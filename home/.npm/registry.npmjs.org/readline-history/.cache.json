{"_id":"readline-history","_rev":"10-2c2b78d252cc19df777e830305ba110e","name":"readline-history","description":"Adds support for saving history to a file, and loading it next time automatically.","dist-tags":{"latest":"1.2.0"},"versions":{"1.0.0":{"name":"readline-history","version":"1.0.0","description":"Adds support for saving history to a file, and loading it next time automatically.","license":"WTFPL","files":["readline-history.js","test-readline-history.js"],"main":"readline-history","readme":"ERROR: No README data found!","_id":"readline-history@1.0.0","dist":{"shasum":"818c75b2a6250f7faf83625c27b0bf34d6bb7f28","tarball":"https://registry.npmjs.org/readline-history/-/readline-history-1.0.0.tgz"},"_from":".","_npmVersion":"1.3.8","_npmUser":{"name":"cy1","email":"anonymity_is_vital@verge.info.tm"},"maintainers":[{"name":"cy1","email":"anonymity_is_vital@verge.info.tm"}],"directories":{}},"1.0.1":{"name":"readline-history","version":"1.0.1","description":"Adds support for saving history to a file, and loading it next time automatically.","license":"WTFPL","files":["readline-history.js","test-readline-history.js","README"],"main":"readline-history","readme":"/* Monkey-patching history support into readline.\n * Usage: createInterface is like readline's createInterface, but also takes a path and \n * a maximum (in-memory) history length. Also it's async, so use CPS.\n *\n * maxDiskSize is maximum bytes that can go in disk history\n * before a rotation. Rotation is super simple, removes previous .old, renames to .old\n *\n * console.log(module.example) to see an example of how to use.\n */\n\nvar rl = require('readline-history');\nrl.createInterface({\n    path: \"/tmp/history\",\n    maxLength: 1234,\n    input: process.input,\n    output: process.output,\n    next: function(rli) {\n        rli.setPrompt(\"? \");\n        rli.prompt();\n        rli.on('line',function(line) {\n            console.log(\"Got line \"+line);\n            rli.prompt();\n        });\n    };\n});\n\n","readmeFilename":"README","_id":"readline-history@1.0.1","dist":{"shasum":"36e08ce6a38bd3809064405583eeb09ec5cc7c09","tarball":"https://registry.npmjs.org/readline-history/-/readline-history-1.0.1.tgz"},"_from":".","_npmVersion":"1.3.8","_npmUser":{"name":"cy1","email":"anonymity_is_vital@verge.info.tm"},"maintainers":[{"name":"cy1","email":"anonymity_is_vital@verge.info.tm"}],"directories":{}},"1.1.0":{"name":"readline-history","version":"1.1.0","description":"Adds support for saving history to a file, and loading it next time automatically.","license":"WTFPL","files":["readline-history.js","test-readline-history.js","README"],"main":"readline-history","readme":"/* Monkey-patching history support into readline.\n * Usage: createInterface is like readline's createInterface, but also takes a path and \n * a maximum (in-memory) history length. Also it's async, so use CPS.\n *\n * maxDiskSize is maximum bytes that can go in disk history\n * before a rotation. Rotation is super simple, removes previous .old, renames to .old\n *\n * console.log(module.example) to see an example of how to use.\n */\n\nvar rl = require('readline-history');\nrl.createInterface({\n    path: \"/tmp/history\",\n    maxLength: 1234,\n    input: process.input,\n    output: process.output,\n    next: function(rli) {\n        rli.setPrompt(\"? \");\n        rli.prompt();\n        rli.on('line',function(line) {\n            console.log(\"Got line \"+line);\n            rli.prompt();\n        });\n    };\n});\n\n","readmeFilename":"README","_id":"readline-history@1.1.0","dist":{"shasum":"5145ab56ff5903aaa5a9ec245dd024e5d7bed0cd","tarball":"https://registry.npmjs.org/readline-history/-/readline-history-1.1.0.tgz"},"_from":".","_npmVersion":"1.3.8","_npmUser":{"name":"cy1","email":"anonymity_is_vital@verge.info.tm"},"maintainers":[{"name":"cy1","email":"anonymity_is_vital@verge.info.tm"}],"directories":{}},"1.2.0":{"name":"readline-history","version":"1.2.0","description":"Adds support for saving history to a file, and loading it next time automatically.","license":"WTFPL","files":["readline-history.js","test-readline-history.js","README"],"main":"readline-history","readme":"/* Monkey-patching history support into readline.\n * Usage: createInterface is like readline's createInterface, but also takes a path and \n * a maximum (in-memory) history length. Also it's async, so use CPS.\n *\n * maxDiskSize is maximum bytes that can go in disk history\n * before a rotation. Rotation is super simple, removes previous .old, renames to .old\n *\n * console.log(module.example) to see an example of how to use.\n */\n\nvar rl = require('readline-history');\nrl.createInterface({\n    path: \"/tmp/history\",\n    maxLength: 1234,\n    input: process.input,\n    output: process.output,\n    next: function(rli) {\n        rli.setPrompt(\"? \");\n        rli.prompt();\n        rli.on('line',function(line) {\n            console.log(\"Got line \"+line);\n            rli.prompt();\n        });\n    };\n});\n\n","readmeFilename":"README","_id":"readline-history@1.2.0","dist":{"shasum":"f670543b2ce9012147fe9903f83d1c189c17d333","tarball":"https://registry.npmjs.org/readline-history/-/readline-history-1.2.0.tgz"},"_from":".","_npmVersion":"1.3.8","_npmUser":{"name":"cy1","email":"anonymity_is_vital@verge.info.tm"},"maintainers":[{"name":"cy1","email":"anonymity_is_vital@verge.info.tm"}],"directories":{}}},"readme":"ERROR: No README data found!","maintainers":[{"name":"cy1","email":"anonymity_is_vital@verge.info.tm"}],"time":{"modified":"2013-08-30T05:22:12.886Z","created":"2013-08-30T03:48:38.221Z","1.0.0":"2013-08-30T03:48:39.814Z","1.0.1":"2013-08-30T03:50:29.814Z","1.1.0":"2013-08-30T05:09:59.852Z","1.2.0":"2013-08-30T05:22:12.886Z"},"users":{"siyb":true},"_attachments":{},"_etag":"\"52202c04-16ab\"","_lastModified":"Fri, 30 Aug 2013 5:22:12 GMT"}